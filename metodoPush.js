//Array inicial
let numArray = [1, 2, 3, 4, 5];
//Funcion
function newNum() {
    //Arreglo elementos
    numArray.push(6, 7);
    //Reviso el array que ahora tiene los n√∫meros agregados
    console.log(numArray)
}

//Ejecuto la funci√≥n
newNum();

// Como podemos ver, al momento de ejecutar la funci√≥n se agregan los n√∫meros 6 y 7 al array.

// Ahora revisemos un ejemplo con strings:

// --Ejemplo con strings

//Array incial
let txtArray = ["Ana", "Juan", "Diego", "Lautaro"];
//Funcion
function addCharacters() {
    // Agrego elementos
    txtArray.push("Chirs", "Maria");
    // Reviso el array que ahora tiene los n√∫meros agregados
    console.log(txtArray);
}
//Como podemos ver, agregamos dos cadenas de strings al ejecutar la funci√≥n donde tenemos txtArray.push(). Es decir, indico el array al que voy agregar elementos, uso el m√©todo .push(), y dentro de .push() indico los elementos que quiero agregar al string. Finalmente, el console.log() lo uso para revisar en la consola si esto sucedi√≥ o no.

// ---- shift() -----

// Ahora pasemos a la otra cara de la moneda donde necesitamos eliminar un elemento del array. .shift() eliminar el primer elemento de un array, es decir, elimina el elemento que est√© en el √≠ndice 0.

//Creamos el array 
let array = [1,2,3,4,5];
console.log(array);

// Aplicamos .shift()
let shiftArray = array.shift();

// Revisamos. El output debe de ser [2,3,4,5]
console.log(array);

// Como vemos, luego de aplicar .shift() se elimin√≥ exitosamente el primer elemento del array. ¬øY si quisi√©ramos eliminar el √∫ltimo elemento? Pasemos al bonus track de esta clase 

// Bonus Track
// Si ya entendiste c√≥mo funciona .shift() aplicar .pop() te ser√° pan comido üçû. El m√©todo .pop() eliminar√° el √∫ltimo elemento de un array. En este sentido, si tenemos un array de 5 elementos, pop() eliminar√° el elemento en el √≠ndice 4. Usemos el mismo ejemplo pero usando este m√©todo.

let popArray = array.pop();
console.log(array);

